### 日志文件存放的地方
logFolder = //home/lxy/test

###
log4j.rootLogger = debug,stdout,file1,file2

### Log4j的appender有以下几种实现：
  ###  log4j.appender=org.apache.log4j.ConsoleAppender
    log4j.appender=org.apache.log4j.FileAppender
###    org.apache.log4j.DailyRollingFileAppender：每天产生一个日志文件（用DatePattern控制何时滚动文件。默认情况下每晚0点滚动。）
###    org.apache.log4j.RollingFileAppender：文件大小到达指定尺寸的时候产生一个新的文件
###    org.apache.log4j.WriterAppender：将日志信息以流格式发送到任意指定的地方

### Log4j的layout有以下几种实现（实际开发一般用PatternLayout）：
###    org.apache.log4j.HTMLLayout：以HTML表格形式布局
###    org.apache.log4j.PatternLayout：可以灵活地指定布局模式
   log4j.layout=org.apache.log4j.SimpleLayout：包含日志信息的级别和信息字符串
###    org.apache.log4j.TTCCLayout：包含日志产生的时间、线程、类别等等信息

### 定义stdout，输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n

### 定义file1，输出到
log4j.appender.file1 = org.apache.log4j.DailyRollingFileAppender
###File：设定生成log的目录和文件名
log4j.appender.file1.File = ${logFolder}/log.log
###Append：(true：追加到原文件末尾；false：覆盖原文件内容）
log4j.appender.file1.Append = true
###Threshold：设定输出log的阈值级别
log4j.appender.file1.Threshold = DEBUG 
log4j.appender.file1.layout = org.apache.log4j.PatternLayout
log4j.appender.file1.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 定义file2，输出到
log4j.appender.file2 = org.apache.log4j.DailyRollingFileAppender
log4j.appender.file2.File =${logFolder}/error.log 
log4j.appender.file2.Append = true
log4j.appender.file2.Threshold = ERROR 
log4j.appender.file2.layout = org.apache.log4j.PatternLayout
log4j.appender.file2.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
